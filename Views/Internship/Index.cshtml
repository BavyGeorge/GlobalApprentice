@model IEnumerable<Global_Intern.Models.Internship>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<input type="search" id="isearch" name="isearch">
<table class="table">
    <thead>
        
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <h3>
                        @Html.DisplayFor(modelItem => item.InternshipTitle)
                    </h3>  
                    <p>
                        @Html.DisplayFor(modelItem => item.InternshipType)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.InternshipDuration)
                    </p>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InternshipExpDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InternshipCreatedAt)
                </td>
                <td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.InternshipId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.InternshipId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.InternshipId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    const search = document.getElementById('isearch');
    search.addEventListener('keypress', () => getUrlQuery(search.value));
    if (e.key === 'Enter') {
        const getUrlQuery = async searchText => {
            console.log(window.location.href);
            window.location.href += '?search=' + searchText;
        };
    }
    
</script>



